# Play Framework configuration file


# Required settings
# ---------------------

# Fill in your email address.
ed.becomeOwnerEmailAddress="admin@example.com"

# Fill in your website address (e.g. "www.example.com").
ed.hostname="localhost"

# Now or soon, generate a HTTPS certificate with Let's Encrypt, then change this to true:
ed.secure=false

# Replace "changeme" with say 80 random characters. The value is very secret, don't tell it to anyone.
# The server will refuse to start until you've changed this.
play.crypto.secret="changeme"


# Email server
# ---------------------

ed.smtp.host=""
ed.smtp.port="587"
ed.smtp.sslPort="465"
ed.smtp.user=""
ed.smtp.useSslOrTls: true
ed.smtp.password=""
ed.smtp.fromAddress="support@example.com"


# Spam detection
# ---------------------

ed.googleApiKey=""
ed.akismetApiKey=""
ed.securityComplaintsEmailAddress="support@example.com"


# Other parts of the system
# ---------------------

ed.redis.host="cache"
ed.nginx.host="web"

ed.postgresql.host="rdb"
ed.postgresql.port="5432"
ed.postgresql.database="ed"
ed.postgresql.user="ed"
ed.postgresql.password=${?POSTGRES_PASSWORD}


# Advanced
# ---------------------

#ed.cdnOrigin="//cdn.example.com"

ed.uploads.maxKiloBytes=100111222
# Also see play.http.parser below.

ed.createSiteHostname=${?CREATE_SITE_HOSTNAME}

# If you'd rather configure a CRYPTO_SECRET environment variable instead.
play.crypto.secret=${?CRYPTO_SECRET}  # leave as is — has no effect if env var not set.


# Play Framework
# ---------------------

# The default is 100KB. Also see ed.uploads.maxKiloBytes above.
play.http.parser.maxMemoryBuffer=100112
play.http.parser.maxDiskBuffer=100113k  # why 113? oh well
play.http.filters="ed.server.Filters"
play.i18n.langs=["en"]
assets.defaultCache="max-age=31536000, s-maxage=31536000, public" # 1 year
trustxforwarded=true


# Testing
# ---------------------

ed.e2eTestPassword=${?E2E_TEST_PASSWORD}
ed.forbiddenPassword=${?FORBIDDEN_PASSWORD}
ed.mayFastForwardTime=${?MAY_FAST_FORWARD_TIME}


# Authentication
# ---------------------

# OpenAuth login (i.e. login via Google, Facebook, etc).
silhouette {

  # should config this ?? or skip?
  # # Authenticator settings
  # authenticator.cookieName="id"
  # authenticator.cookiePath="/"
  # authenticator.secureCookie=false
  # authenticator.httpOnlyCookie=true
  # authenticator.cookieIdleTimeout=1800
  # authenticator.cookieAbsoluteTimeout=43200
  # authenticator.authenticatorExpiry=43200

  # Google provider
  google.authorizationURL="https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL="https://accounts.google.com/o/oauth2/token"
  google.clientID="…"
  google.clientSecret="…"
  google.scope="profile email"

  # Facebook provider
  facebook.authorizationURL="https://graph.facebook.com/v2.3/oauth/authorize"
  facebook.accessTokenURL="https://graph.facebook.com/v2.3/oauth/access_token"
  facebook.clientID="…"
  facebook.clientSecret="…"
  # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
  facebook.scope="email"

  # Twitter provider
  twitter.requestTokenURL="https://twitter.com/oauth/request_token"
  twitter.accessTokenURL="https://twitter.com/oauth/access_token"
  twitter.authorizationURL="https://twitter.com/oauth/authenticate"
  twitter.consumerKey="…"
  twitter.consumerSecret="…"

  # GitHub
  github.authorizationURL="https://github.com/login/oauth/authorize"
  github.accessTokenURL="https://github.com/login/oauth/access_token"
  github.clientID="…"
  github.clientSecret="…"
  github.scope="user:email"

}

