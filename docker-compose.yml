version: '2'
services:
  nginx:
    image: debiki/ed-nginx:$VERSION_TAG
    command: nginx
    restart: always
    volumes:
      - ./uploads/:/opt/ed/uploads/:ro
      - ./sites-available/:/etc/nginx/sites-available/
      - ./sites-enabled/:/etc/nginx/sites-enabled/
      - ./letsencrypt/:/etc/letsencrypt/
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - play

  play:
    image: debiki/ed-play:$VERSION_TAG
    restart: always
    stdin_open: true  # otherwise Play Framework exits
    volumes:
      - ./play-conf/:/opt/ed/play-conf
      - ./uploads/:/opt/ed/uploads/
    links:
      - redis
      - postgres
    environment:
      CONFIG_FILE: /opt/ed/play-conf/prod.conf
      POSTGRES_PASSWORD: 'changeme'  # edit

  redis:
    image: redis:3.0.7-alpine
    restart: always
    volumes:
      - ./redis-data/:/data/

  postgres:
    image: debiki/ed-postgres:$VERSION_TAG
    restart: always
    volumes:
      - ./postgres-data/:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: 'changeme'  # edit (to the same password as above)
      # Optionally, streaming replication peer:
      # (but you'll need to rename ./postgres-data/recovery.conf.disabled first â€” and
      # that file isn't created until you start Postgres)
      # PEER_HOST: 'postgres2'
      # PEER_PORT: '5432'
      # PEER_PASSWORD: '...'

# vim: et ts=2 sw=2
