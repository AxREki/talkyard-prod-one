events { }

http {
  server {
    # Change this to the hostname of your Talkyard server,
    # e.g.:  talkyard.yourdomain.com
    server_name localhost;

    # TLS config. For example, your own LetsEncrypt cert.
    # ssl_certificate     /etc/certbot/live/talkyard.yourdomain.com/fullchain.pem;
    # ssl_certificate_key /etc/certbot/live/talkyard.yourdomain.com/privkey.pem;
    #
    # TLS hardening, from https://github.com/debiki/talkyard/blob/master/images/web/server-ssl.conf:
    # ssl_prefer_server_ciphers on;
    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE. Could allow v1.3, disallow v1?
    # ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED;

    location / {
      # This works only with the proxy server in docker-compose.yml
      # â€” it knows the ip address to the Web container, and can access
      # its port 80. But proxy servers not inside this Docker network,
      # don't know and cannot do those things.
      proxy_pass http://web:80/;

      # Sth like this is what you need to use instead:
      # (Use the ip addr or hostname of the server where Talkyard runs.)
      #proxy_pass http://127.0.0.1:8080/;

      proxy_http_version 1.1;

      # $host = the first servername, no port number.
      # $http_host = the Host header, if any.
      proxy_set_header Host  $http_host;

      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;
      proxy_connect_timeout  900;
      proxy_send_timeout     900;
      proxy_read_timeout     900;
      send_timeout           900;
    }
  }
}


